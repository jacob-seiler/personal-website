---
import { getImage } from '@astrojs/image';
import type { Project } from "./ProjectCards.astro";
import ProjectCardAnchor from "./ProjectCardAnchor.astro";

interface Props {
	data: Project;
}

const { data } = Astro.props;
const { src } = await getImage({ src: `src/assets/${data.backgroundImage}.webp`, alt: "Background image", width: 700, height: 500 })
---

<div style={{backgroundImage: `url(${src})`}} class="card text-left bg-primary px-6 py-4 shadow-light dark:shadow-dark">
	<div class="grid grid-cols-3 tiny:grid-cols-1">
		<div class="col-span-2">
			<h2 class="text-white font-bold leading-none text-2xl tiny:text-xl">{data.name}</h2>
			<p class="text-gray-50 italic text-base tiny:text-sm">{data.technologies.join(", ")}</p>
		</div>
		<div>
			<div class="flex float-right tiny:float-left">
				<ProjectCardAnchor href={data.sourceURL} icon="github" alt="GitHub" name={data.name} />
				{data.courseURL ? <ProjectCardAnchor href={data.courseURL} icon="course" alt="Course" name={data.name} /> : null}
				{data.externalURL ? <ProjectCardAnchor href={data.externalURL} icon="external" alt="Demo" name={data.name} /> : null}
			</div>
		</div>
	</div>
	<p class="mt-4 text-gray-50 leading-tight text-base tiny:text-sm">
		{
			data.description.split("**").map((seg, i) => {
				if (i % 2 == 1) return <b>{seg}</b>;
				return <>{seg}</>;
			})
		}
	</p>
</div>

<style>
	.card {
		background-blend-mode: multiply;
		background-position: right;
		background-repeat: no-repeat;
		background-size: 60%;
	}
</style>
